_____________Raccourcis Intellij_____________

psvm => fonction main()

sout => println()

Ctrl Z  => Undo


Ctrl Shift F10  => lance Run

Ctrl F5  => re run le main | ou un test

Ctrl F9  => Rebuild

Alt F12  => ouvre un Terminal

Ctrl F2 => Stop run | Utile qd boucle infini

Shift Escap  => Hide Terminal | Project directories


Ctrl Shift /  => Commenter une selection de ligne en block

Ctrl /  => Commenter une ligne

Ctrl Space  => code Completion, si on le met apres un. IDE affiche toutes propositions de méthode possible

Ctrl Y  => Delete la ligne ou le curseur se trouve

Ctrl D  => Dupliquer une ligne ou le curseur se trouve

Ctrl W  => étendre une selection sur une ligne depuis l'endroit ou se trouve le curseur des 2 cotés

Shift ->  => étend une sélection sur la droite

Shift <-  => étend une sélection sur la gauche

Ctrl Shift -> => Agrandit la selection vers la droite

Ctrl Shift <- => Agrandit la selection vers la gauche

Ctrl O  => pour voire toutes les methods @Override de la class mére | racourci pour faire un override de la methode toString()

Ctrl N => Navigation = Tape le nom de la class ou on veut aller

Ctrl B  => clic sur un objet pour Naviguer la ou l'objet a été initialisé

Ctrl P  => character info il faut placer le curseur entre les parentheses d'1 methode ou sur la methode, affiche les différentes versions de la methode avec leurs signatures (input + output)

Ctrl Q  => afficher la javaDoc

Ctrl Space => place le curseur après un point (class.) pour afficher les methode disponible dans cette class | puis si on a déja mis une methode écrite en déplaçant le curseur à la fin de son nom affiche input/output (return) attendu pour cette methode => permet de résoudre des erreurs de typage parfois (si la methode est un input (arg) d'une autre méthode checker aussi la compatibilité avec output de cette methode en arg)

Ctrl F  => faire une recherche sur la class ou on est

Ctrl R  => remplace une selection


Ctrl Shift F  => faire une recherche sur tout le projet

Ctrl Shift T => Pour naviguer vers le test de la Class ouverte

Ctrl Shift J => remonter la ligne du dessous à la position du curseur EX remonter un else juste derriére } | J pour join

Ctrl Shift U => Switch une select majuscule/minuscule

Ctrl Shift -> => Agrandit la selection vers la droite

Ctrl Shift <- => Agrandit la selection vers la gauche

Ctrl Shift D => lance le debugger

Ctrl Shift F8 => fenetre qui affiche tous les points d'arret qu'on a mis


Ctrl Alt ->  => Navigate forward

Ctrl Alt <-  => Navigate back la ou on était juste avant

Ctrl Alt V  => Mettre une selection de code (ou curseur en fin de ligne) dans une variable sur une ligne propre, la variable uniquement sera appelé à l'endroit original

Ctrl Alt M  => Factorisation select plusieurs lignes de code identiques pour les mettre dans une methode | IDE nous propose s'il trouve ce Pattern à plusieurs endroits de les remplacer par cette fct | fait une methode avec un bloc de code ex une boucle for avec bcp de code

Ctrl Alt N  => défait la factorisation (place le curseur sur l'utilisation de la variable)

Ctrl Alt T  => Mettre une selection de code dans un bloc if | else if | while | for | try/catch | try/finally | synchronized | Runnable ...

Ctrl Alt O  => clean les imports non utilisés

Ctrl Alt Enter => Commencer une nell ligne au-dessus de la ou est le curseur

Shift Enter  => commencer une nell ligne en dessous de la ou est le curseur

Shift F6  => renommer une variable partout apres avoir mis le curseur sur le nom de la variable à modifier

Shift Tab => retirer de l'indentation


Alt Shift  => mettre le curseur à plusieurs endroits en meme temps pour modif

Alt Shift (fleche vers le haut) => déplacer une ligne vers le haut

Alt Shift (fleche vers le bas) => déplacer une ligne vers le bas

Alt Enter  => importer une class | ou crée une Class ou une methode qui est utilisé mais pas encore crée (ex TDD)

Alt Insert => Ouvrir generator => constructor | getter setter | toString()

Alt 1  => Open Project

Alt Return <=> ou Clic sur ampoule rouge à Droite => IDE nous offre des solutions auto généré pour fixer le problème | PB place le curseur sur methode souligné en rouge pour avoir un descriptif du problème

Alt F12 => Ouvre un Terminal


Clic date verte gauche interface => affiche toutes les class qui utilise cette interface

Clic D / Column Selection Mode = Alt Maj Insert => On passe d'un style de selection horizontal à un style vertical . C'est une façon de sélectionner rapidement des éléments sur plusieurs lignes

Clic D / Refactor / inline (Introduce) field / Menu déroulant = field déclaration => Select le nom de la variable (Ex nom d'1 instance) de variable local elle devient une variable de class (field) (RQ si les methods ou cette variable est utilisé sont static IDE la mettre static)

Clic D / Refactor / Introduce Constant => C'est généralement une mauvaise idée de hard code un chiffre on le select pour en faire une Constante | Nommerles constante en majuscule

clic D  / Refactor / type migration => clic droit sur le type d'un attribut lorsqu'on a fait un Enum pour cet attribut et qu'on veut les associer | Shift Ctrl F6

clic D / Refacteur / Pull Members Up  => clic droit sur le nom du field pour le déplacer vers la class mére | nous présente ici une liste à cocher de tous les soi-disant membres (fields, methodes) de cette classe | marche aussi en shift selectionant plusieurs lignes de fields

clic D / Refactor / Extract Interface => cursseur sur le nom d'1 class permet de créer une interface en incluant des methode de la class de départ via à une table à cocher à inclure dans l'interface crée | Utilisé aussi pour faire une composition/héritage avec des Delegate methodes

Select code ( => ça entoure ce code de parenthese



/** enter => pour créer une JavaDoc sur une methode ...

Pb curseur carré => touche insert


F8  => step over dans debbuger | exécute la ligne sans entré dans les détaille des methodes présent sur la ligne

F7  => step in  | entre dans les détaille de la ou les methode lancé sur la ligne

Alt F12  => ouvre un Terminal

java -cp target\classes com.tuto.game.GuessingGame => Lancer un code depuis le Terminal -cp = change path| retrouve arboressance du build target\classes puis ajoute le path du package de la class com.tuto.game.GuessingGame EX user doit ecrire qqc dans la console String input = System.console().readLine("Enter a number: ");








